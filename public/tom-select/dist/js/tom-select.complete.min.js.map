{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/sifter/lib/diacritics.ts","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../node_modules/@orchidjs/sifter/lib/sifter.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self, args );\n\t\t\t}\n\t\t});\n\t}\n};\n","\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'g');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'g');\n\n\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\" \",\n\t0:\"߀\",\n\tA:\"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\",\n\tAA:\"Ꜳ\",\n\tAE:\"ÆǼǢ\",\n\tAO:\"Ꜵ\",\n\tAU:\"Ꜷ\",\n\tAV:\"ꜸꜺ\",\n\tAY:\"Ꜽ\",\n\tB:\"ⒷＢḂḄḆɃƁ\",\n\tC:\"ⒸＣꜾḈĆCĈĊČÇƇȻ\",\n\tD:\"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ\",\n\tDh:\"Ð\",\n\tDZ:\"ǱǄ\",\n\tDz:\"ǲǅ\",\n\tE:\"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ\",\n\tF:\"ꝼⒻＦḞƑꝻ\",\n\tG:\"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ\",\n\tH:\"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\",\n\tI:\"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\",\n\tJ:\"ⒿＪĴɈȷ\",\n\tK:\"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\",\n\tL:\"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\",\n\tLJ:\"Ǉ\",\n\tLj:\"ǈ\",\n\tM:\"ⓂＭḾṀṂⱮƜϻ\",\n\tN:\"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ\",\n\tNJ:\"Ǌ\",\n\tNj:\"ǋ\",\n\tO:\"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\",\n\tOE:\"Œ\",\n\tOI:\"Ƣ\",\n\tOO:\"Ꝏ\",\n\tOU:\"Ȣ\",\n\tP:\"ⓅＰṔṖƤⱣꝐꝒꝔ\",\n\tQ:\"ⓆＱꝖꝘɊ\",\n\tR:\"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ\",\n\tS:\"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\",\n\tT:\"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\",\n\tTh:\"Þ\",\n\tTZ:\"Ꜩ\",\n\tU:\"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\",\n\tV:\"ⓋＶṼṾƲꝞɅ\",\n\tVY:\"Ꝡ\",\n\tW:\"ⓌＷẀẂŴẆẄẈⱲ\",\n\tX:\"ⓍＸẊẌ\",\n\tY:\"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\",\n\tZ:\"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\",\n\ta:\"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ\",\n\taa:\"ꜳ\",\n\tae:\"æǽǣ\",\n\tao:\"ꜵ\",\n\tau:\"ꜷ\",\n\tav:\"ꜹꜻ\",\n\tay:\"ꜽ\",\n\tb:\"ⓑｂḃḅḇƀƃɓƂ\",\n\tc:\"ｃⓒćĉċčçḉƈȼꜿↄ\",\n\td:\"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ\",\n\tdh:\"ð\",\n\tdz:\"ǳǆ\",\n\te:\"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ\",\n\tf:\"ⓕｆḟƒ\",\n\tff:\"ﬀ\",\n\tfi:\"ﬁ\",\n\tfl:\"ﬂ\",\n\tffi:\"ﬃ\",\n\tffl:\"ﬄ\",\n\tg:\"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ\",\n\th:\"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\",\n\thv:\"ƕ\",\n\ti:\"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\",\n\tj:\"ⓙｊĵǰɉ\",\n\tk:\"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\",\n\tl:\"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ\",\n\tlj:\"ǉ\",\n\tm:\"ⓜｍḿṁṃɱɯ\",\n\tn:\"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ\",\n\tnj:\"ǌ\",\n\to:\"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ\",\n\toe:\"œ\",\n\toi:\"ƣ\",\n\too:\"ꝏ\",\n\tou:\"ȣ\",\n\tp:\"ⓟｐṕṗƥᵽꝑꝓꝕρ\",\n\tq:\"ⓠｑɋꝗꝙ\",\n\tr:\"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\",\n\ts:\"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ\",\n\tss:\"ß\",\n\tt:\"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\",\n\tth:\"þ\",\n\ttz:\"ꜩ\",\n\tu:\"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\",\n\tv:\"ⓥｖṽṿʋꝟʌ\",\n\tvy:\"ꝡ\",\n\tw:\"ⓦｗẁẃŵẇẅẘẉⱳ\",\n\tx:\"ⓧｘẋẍ\",\n\ty:\"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\",\n\tz:\"ⓩｚźẑżžẓẕƶȥɀⱬꝣ\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nexport const code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter];\n\t\t});\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n\tchar_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n\t\treturn accumulator;\n\t}, accumulator);\n\n}\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\t\n\tif( chars.length == 1 ){\n\t\treturn chars[0];\n\t}\n\t\n\tvar longest = 1;\n\tchars.forEach((a)=>{longest = Math.max(longest,a.length)});\n\n\tif( longest == 1 ){\n\t\treturn '['+chars.join('')+']';\n\t}\n\n\treturn '(?:'+chars.join(glue)+')';\t\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    \n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\t\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\t\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\n\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = [latin];\n\t\t\t}\n\t\t\t\n\t\t\tvar patt = new RegExp( arrayToPattern(diacritics[latin]),'iu');\n\t\t\tif( diacritic.match(patt) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tdiacritics[latin].push(diacritic);\n\t\t}\n\t});\n\t\t\n\tvar latin_chars = Object.keys(diacritics);\n\t\n\t\n\t// latin character pattern\n\t// match longer substrings first\n\tlatin_chars\t\t= latin_chars.sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ arrayToPattern(latin_chars) + accent_pat + '*)','g');\n\t\n\t\n\t// build diacritic patterns\n\t// ae needs: \n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\t\t\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\t\t\t\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn arrayToPattern(diacritics[l]);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\t\t\t\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\t\t\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\t\t\n\t});\n\t\t\t\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics();\n\t}\n\t\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\t\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\t\t\n\t\tif( part == '' ){\n\t\t\treturn '';\n\t\t}\n\t\t\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\t\t\t\t\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\t\t\n\t\t// 'أهلا' (\\u{623}\\u{647}\\u{644}\\u{627}) or 'أهلا' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\t\tconst composed_part = part.normalize('NFC');\n\t\tif( composed_part != part ){\n\t\t\treturn arrayToPattern([part,composed_part]);\n\t\t}\n\t\t\t\t\n\t\treturn part;\n\t}).join('');\n\t\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\t\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\t\n\tif( typeof value == 'function' ) return value;\n\t\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(regex);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\tif( typeof sort == 'function' ){\n\t\t\treturn sort.bind(this);\n\t\t}\t\t\t\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\tmultipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t} else if (sort_flds_count === 1) {\n\t\t\tconst sort_fld = sort_flds[0].field;\n\t\t\tconst multiplier = multipliers[0];\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(sort_fld, a),\n\t\t\t\t\tget_field(sort_fld, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\t\tfield = sort_flds[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:Partial<T.Options>):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\t//controlInput: null,\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:Partial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport Sifter from '@orchidjs/sifter/lib/sifter';\nimport { escape_regex, iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true; \n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:Partial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\t\n\t\t\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t\t\t\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\t\t\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){ \n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( !settings.hasOwnProperty('controlInput') ){\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\t\t\t\n\t\t// custom controlInput\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\t\t\t\n\t\t// controlInput = null\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\t\t\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\t\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\t\t\n\t\t\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\t\t\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\t\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\t\n\t\taddEvent(focus_node,'resize',\t\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(focus_node,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items,true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\titerate( splitInput, (piece) => {\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\t\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tconst activeItems = this.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\t\t\n\t\tthis.hideInput();\n\t\tthis.close();\n\n\t\tthis.activeItems = activeItems;\n\t\taddClasses( activeItems, 'active' );\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\t\t\t\t\t\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\t\n\t\t}else{\n\t\t\t\t\t\t\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\t\t\t\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\t\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\t\t\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet opt_value\t\t= results.items[i].id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\t\t\tlet option_el\t\t= self.getOption(opt_value,true) as HTMLElement;\n\t\t\t\n\t\t\t\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup) => {\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, groups[optgroup] );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, groups[optgroup] );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\t\t\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\t\t\t\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\t\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\t\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\t\tif( !self.options.hasOwnProperty(value_old) ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || self.options[value_old].$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\titerate(this.options,(option,key)=>{\n    \t\tif( this.items.indexOf(key as string) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string, create:boolean=false):null|HTMLElement {\n\t\tconst hashed = hash_key(value);\n\n\t\tif( hashed !== null && this.options.hasOwnProperty(hashed) ){\n\t\t\tconst option = this.options[hashed];\n\t\t\t\t\t\t\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\t\t\t\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\t\t\n\t\t\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.checkValidity();\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\t\t\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\t\t\t\t\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\toption_el.selected = true;\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\t\t\t\t\t\t\t\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\t\t\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret]);\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\t\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t/**\n\t * _render() can be called directly when we know we don't want to hit the cache\n\t * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tvar value = '', id, html;\n\t\tconst self = this;\n\t\t\n\t\tif( templateName === 'option' || templateName == 'item' ){\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tself.options[value].$div = html;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option, value)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('checkbox_options',function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input') as HTMLInputElement;\n\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}else{\n\t\t\t\tcheckbox.checked = false;\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nTomSelect.define('clear_button',function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\t\t\tself.clear();\n\t\t\t\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\t\t\t\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n});\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\n\nTomSelect.define('drag_drop',function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nTomSelect.define('dropdown_header',function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex } from '../../vanilla';\n\n\nTomSelect.define('caret_position',function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\t\n\tself.hook('instead','moveCaret',(direction:number) => {\n\t\t\t\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\t\t\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\t\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\t\t\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\t\n\t\t\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\t\t\n\t\t\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\t\t\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\t\t\t\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus();\n\t\t});\n\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('input_autogrow', function(this:TomSelect) {\n\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\tif( self.items.length > 0 ){\n\t\t\t\ttest_input.textContent\t= control.value;\n\t\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t\t}else{\n\t\t\t\tcontrol.style.width\t\t= '';\n\t\t\t}\n\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\n\nTomSelect.define('no_backspace_delete', function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\n\nTomSelect.define('no_active_items', function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n});\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nTomSelect.define('optgroup_columns', function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption } from '../../types/index';\nimport { RBOptions } from './types';\n\n\nTomSelect.define('remove_button',function(this:TomSelect, userOptions:RBOptions ){\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar rendered = getDom(orig_render_item.call(self, data, escape));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\n\nTomSelect.define('virtual_scroll',function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t\treturn;\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tfunction canLoadMore(query:string):boolean{\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t// set the next url that will be\n\tself.setNextUrl = function(value:string,next_url:any):void{\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = function(query:string):any{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl(query);\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions();\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ) option.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:function(){\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:function(){\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',function(){\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent < 0.95 ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","latin_pat","accent_pat","accent_reg","RegExp","diacritic_patterns","latin_convert","convert_pat","Object","keys","join","code_points","asciifold","str","normalize","replace","toLowerCase","foreignletter","arrayToPattern","chars","glue","longest","a","Math","max","allSubstrings","input","result","substring","subresult","tmp","slice","charAt","unshift","diacriticRegexPoints","regex","undefined","diacritics","code_range","i","diacritic","String","fromCharCode","latin","patt","match","latin_chars","sort","b","pattern","map","sub_pat","l","hasOwnProperty","generateDiacritics","part","no_accent","composed_part","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","bind","get_field","id","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","JSON","parse","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","order","isOpen","isDisabled","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","tabIndex","is_select_tag","rtl","inputId","isRequired","required","sifter","setupCallbacks","setupTemplates","control","dropdown","_render","dropdown_content","inputMode","control_input","controlInput","focus_node","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","_destroy","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","addItem","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","currentResults","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","$div","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","checkValidity","opts","empty_option","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","moveCaret","new_pos","from","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","orig_render_option","rendered","prepend","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","orig_onBlur","relatedTarget","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","scrollHeight"],"mappings":"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"}